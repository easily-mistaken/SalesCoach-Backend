generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User with roles: admin, sales-rep, coach, manager
enum Role {
  SALES_REP
  COACH
  MANAGER
  ADMIN
}

enum Status {
  PENDING
  SUCCESS
  FAIL
}

model User {
  id            String             @id @default(uuid())
  firstName     String
  lastName      String
  email         String             @unique
  phone         String?
  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt
  role          Role               @default(ADMIN)
  callAssets    CallAsset[]
  organizations UserOrganization[]
}

model Organization {
  id        String             @id @default(uuid())
  name      String
  phone     String?
  address   String?
  city      String?
  state     String?
  zip       String?
  country   String?
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt
  users     UserOrganization[]
}

model UserOrganization {
  userId         String
  organizationId String
  user           User         @relation(fields: [userId], references: [id])
  organization   Organization @relation(fields: [organizationId], references: [id])

  @@id([userId, organizationId])
}

model Team {
  id          String      @id @default(uuid())
  name        String
  description String?
  price       Float?
  image       String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  callAssets  CallAsset[]
}

model CallAsset {
  id         String    @id @default(uuid())
  userId     String
  teamId     String
  content    String?
  type       String?
  date       DateTime?
  time       DateTime?
  status     Status    @default(PENDING)
  transcript String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  user       User      @relation(fields: [userId], references: [id])
  team       Team      @relation(fields: [teamId], references: [id])
}
